{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "dc1185e5-bdac-45cf-a338-0f76256b242f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-18T23:43:05.661420Z",
     "iopub.status.busy": "2025-07-18T23:43:05.660854Z",
     "iopub.status.idle": "2025-07-18T23:43:08.145291Z",
     "shell.execute_reply": "2025-07-18T23:43:08.144701Z",
     "shell.execute_reply.started": "2025-07-18T23:43:05.661403Z"
    }
   },
   "outputs": [],
   "source": [
    "!pip install -q transformers accelerate bitsandbytes einops\n",
    "!pip install -q pymupdf\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "cda9ab27-56bc-4e63-98f3-fdabfa445229",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-18T23:43:08.146600Z",
     "iopub.status.busy": "2025-07-18T23:43:08.146206Z",
     "iopub.status.idle": "2025-07-18T23:43:08.340930Z",
     "shell.execute_reply": "2025-07-18T23:43:08.340377Z",
     "shell.execute_reply.started": "2025-07-18T23:43:08.146583Z"
    }
   },
   "outputs": [],
   "source": [
    "from huggingface_hub import login\n",
    "login(\"REMOVED\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "f6bbdeff-eead-4de7-8c7a-8e10aa1f2b4a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-18T23:43:15.281613Z",
     "iopub.status.busy": "2025-07-18T23:43:15.281262Z",
     "iopub.status.idle": "2025-07-18T23:43:55.876600Z",
     "shell.execute_reply": "2025-07-18T23:43:55.876032Z",
     "shell.execute_reply.started": "2025-07-18T23:43:15.281597Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2025-07-18 23:43:19.788336: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
      "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
      "E0000 00:00:1752882199.803852    2451 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
      "E0000 00:00:1752882199.808687    2451 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
      "2025-07-18 23:43:19.824467: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.\n",
      "To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "5a2f737375fe4a8ca529048ea9d72144",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Loading checkpoint shards:   0%|          | 0/19 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Device set to use cuda:0\n",
      "The following generation flags are not valid and may be ignored: ['temperature']. Set `TRANSFORMERS_VERBOSITY=info` for more details.\n"
     ]
    }
   ],
   "source": [
    "from transformers import AutoTokenizer, AutoModelForCausalLM, BitsAndBytesConfig, pipeline\n",
    "import torch\n",
    "\n",
    "model_id = \"mistralai/Mixtral-8x7B-Instruct-v0.1\"\n",
    "\n",
    "bnb_config = BitsAndBytesConfig(\n",
    "    load_in_4bit=True,\n",
    "    bnb_4bit_compute_dtype=torch.float16,\n",
    "    bnb_4bit_use_double_quant=True,\n",
    "    bnb_4bit_quant_type=\"nf4\"\n",
    ")\n",
    "\n",
    "tokenizer = AutoTokenizer.from_pretrained(model_id)\n",
    "\n",
    "model = AutoModelForCausalLM.from_pretrained(\n",
    "    model_id,\n",
    "    quantization_config=bnb_config,\n",
    "    device_map=\"auto\"\n",
    ")\n",
    "\n",
    "pipe = pipeline(\n",
    "    \"text-generation\",\n",
    "    model=model,\n",
    "    tokenizer=tokenizer,\n",
    "    max_new_tokens=4096,\n",
    "    do_sample=False,\n",
    "    return_full_text=False\n",
    ")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "d2d59afd-54bc-492c-aa94-8ddb94f9561e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-18T23:44:11.286535Z",
     "iopub.status.busy": "2025-07-18T23:44:11.285921Z",
     "iopub.status.idle": "2025-07-18T23:44:11.289165Z",
     "shell.execute_reply": "2025-07-18T23:44:11.288778Z",
     "shell.execute_reply.started": "2025-07-18T23:44:11.286517Z"
    }
   },
   "outputs": [],
   "source": [
    "def preprocess_cv_text(text):\n",
    "    import re\n",
    "    text = re.sub(r'\\n+', '\\n', text)\n",
    "    text = re.sub(r'[ \\t]+', ' ', text)\n",
    "    return text.strip()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "58804de1-1726-4f8e-8841-6d6dafed1452",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-18T23:44:14.980800Z",
     "iopub.status.busy": "2025-07-18T23:44:14.980400Z",
     "iopub.status.idle": "2025-07-18T23:44:15.042631Z",
     "shell.execute_reply": "2025-07-18T23:44:15.042137Z",
     "shell.execute_reply.started": "2025-07-18T23:44:14.980784Z"
    }
   },
   "outputs": [],
   "source": [
    "import fitz\n",
    "\n",
    "def extract_text_from_pdf(pdf_path):\n",
    "    doc = fitz.open(pdf_path)\n",
    "    text= \"\\n\".join(page.get_text() for page in doc).strip()\n",
    "    return preprocess_cv_text(text)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "5540b312-8f9d-4002-b64f-00d5e3ef33bb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-18T23:44:18.320464Z",
     "iopub.status.busy": "2025-07-18T23:44:18.320156Z",
     "iopub.status.idle": "2025-07-18T23:44:18.323386Z",
     "shell.execute_reply": "2025-07-18T23:44:18.322865Z",
     "shell.execute_reply.started": "2025-07-18T23:44:18.320447Z"
    }
   },
   "outputs": [],
   "source": [
    "def build_prompt(cv_text):\n",
    "    return f\"\"\"\n",
    "Tu es un extracteur d'informations structuré. À partir du texte du CV ci-dessous, fournis un objet JSON valide contenant les champs suivants :\n",
    "\n",
    "- name\n",
    "- profile\n",
    "- phonez\n",
    "- email\n",
    "- address\n",
    "- experience (liste de: company, title, start_date, end_date, description)\n",
    "- education (liste de: university, degree, start_date, end_date, description)\n",
    "- certifications (liste de: title, organization, date, description)\n",
    "- skills (liste de chaînes)\n",
    "\n",
    "Donne uniquement un JSON valide avec tout le text du CV n’oublie aucun mot, sans commentaire ni texte en plus.\n",
    "\n",
    "CV:\n",
    "\\\"\\\"\\\"{cv_text}\\\"\\\"\\\"\n",
    "\"\"\"\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "228574b8-46b9-4c46-9d53-2b0fda97eb86",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-18T23:22:50.954728Z",
     "iopub.status.busy": "2025-07-18T23:22:50.954062Z",
     "iopub.status.idle": "2025-07-18T23:24:19.565952Z",
     "shell.execute_reply": "2025-07-18T23:24:19.565365Z",
     "shell.execute_reply.started": "2025-07-18T23:22:50.954697Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following generation flags are not valid and may be ignored: ['temperature']. Set `TRANSFORMERS_VERBOSITY=info` for more details.\n",
      "Setting `pad_token_id` to `eos_token_id`:2 for open-end generation.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "```json\n",
      "{\n",
      "  \"name\": \"Achraf HADJ TAIEB\",\n",
      "  \"profile\": \"Directeur IT et Chef de projet expérimenté, certifié Agile Scrum PSPO I, avec plus de 16 ans d’expérience dans la gestion de projets stratégiques et la conduite de transformations digitales.\",\n",
      "  \"phone\": \"+33 6 44 18 07 72\",\n",
      "  \"email\": \"achraf.ht@gmail.com\",\n",
      "  \"address\": {\n",
      "    \"location\": \"Paris\",\n",
      "    \"carbonne\": \"9.78 g CO₂e\"\n",
      "  },\n",
      "  \"experience\": [\n",
      "    {\n",
      "      \"company\": \"Allianz Trade\",\n",
      "      \"title\": \"Directeur et Chef de projet IT\",\n",
      "      \"start_date\": \"Nov 2021\",\n",
      "      \"end_date\": \"Dec 2024\",\n",
      "      \"description\": \"Programme Qirin - Document Services\"\n",
      "    },\n",
      "    {\n",
      "      \"company\": \"AXA Assurance\",\n",
      "      \"title\": \"Squad RH de AXA France\",\n",
      "      \"start_date\": \"Janv 2021\",\n",
      "      \"end_date\": \"Novembre 2021\",\n",
      "      \"description\": \"Digitalisation des processus RH\"\n",
      "    },\n",
      "    {\n",
      "      \"company\": \"Finbill\",\n",
      "      \"title\": \"Project Manager\",\n",
      "      \"start_date\": \"Avril. 2019\",\n",
      "      \"end_date\": \"Dec 2020\",\n",
      "      \"description\": \"Stratup dans l’objectif est de fournir une solution de facturation et de paiement en ligne (Web et Mobile) pour répondre aux obligations légales de la facture dématérialisée basée sur la technologie Blockchain.\"\n",
      "    },\n",
      "    {\n",
      "      \"company\": \"Ville de Bruxelles\",\n",
      "      \"title\": \"Digitalisation des processus métier IT Manager\",\n",
      "      \"start_date\": \"De mars 2017 Avril. 2019\",\n",
      "      \"end_date\": null,\n",
      "      \"description\": \"Digital Transformation Program\"\n",
      "    }\n",
      "  ],\n",
      "  \"education\": [\n",
      "    {\n",
      "      \"university\": \"Faculté des sciences de Sfax\",\n",
      "      \"degree\": \"Maitrise Informatique, option réseaux et systèmes distribués\",\n",
      "      \"start_date\": \"2007\",\n",
      "      \"end_date\": null,\n",
      "      \"description\": null\n",
      "    },\n",
      "    {\n",
      "      \"university\": \"École nationale d'ingénieur de Sfax – Tunisie\",\n",
      "      \"degree\": \"Master Technologies de l’information\",\n",
      "      \"start_date\": \"2008\",\n",
      "      \"end_date\": null,\n",
      "      \"description\": null\n",
      "    }\n",
      "  ],\n",
      "  \"certifications\": [\n",
      "    {\n",
      "      \"title\": \"Certification. PSPO1\",\n",
      "      \"organization\": \"Formation méthode agile scrum\",\n",
      "      \"date\": \"2019\",\n",
      "      \"description\": null\n",
      "    }\n",
      "  ],\n",
      "  \"skills\": [\n",
      "    \"Managériales\",\n",
      "    \"Chefferie/Directions de projet\",\n",
      "    \"Fonctionnelles\",\n",
      "    \"Techniques\",\n",
      "    \"Méthodologie\",\n",
      "    \"Secteur métier : Banque & Assurance, E-commerce et marketing digitale, Ressources humaines\"\n",
      "  ]\n",
      "}\n",
      "```\n"
     ]
    }
   ],
   "source": [
    "\n",
    "pdf_path = \"CV_Achraf_HT_Directeur et Chef de projet IT_2025.pdf\"\n",
    "\n",
    "cv_text = extract_text_from_pdf(pdf_path)\n",
    "prompt = build_prompt(cv_text)\n",
    "\n",
    "output = pipe(prompt)[0][\"generated_text\"]\n",
    "print(output)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "66708996-d8b1-4e8c-a7a7-9efd1263a51d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-18T23:24:19.567181Z",
     "iopub.status.busy": "2025-07-18T23:24:19.566727Z",
     "iopub.status.idle": "2025-07-18T23:24:19.570618Z",
     "shell.execute_reply": "2025-07-18T23:24:19.570166Z",
     "shell.execute_reply.started": "2025-07-18T23:24:19.567164Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Device set to use cuda:0\n",
      "The following generation flags are not valid and may be ignored: ['temperature']. Set `TRANSFORMERS_VERBOSITY=info` for more details.\n"
     ]
    }
   ],
   "source": [
    "pope = pipeline(\n",
    "    \"text-generation\",\n",
    "    model=model,\n",
    "    tokenizer=tokenizer,\n",
    "    max_new_tokens=8192,  \n",
    "    do_sample=False,\n",
    "    return_full_text=False\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "5aed0dc7-0d01-4769-849e-6a50042bdd0e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-18T23:55:13.134491Z",
     "iopub.status.busy": "2025-07-18T23:55:13.134115Z",
     "iopub.status.idle": "2025-07-18T23:55:13.137660Z",
     "shell.execute_reply": "2025-07-18T23:55:13.137151Z",
     "shell.execute_reply.started": "2025-07-18T23:55:13.134474Z"
    }
   },
   "outputs": [],
   "source": [
    "def build_prompt_position1(cv_text):\n",
    "    return f\"\"\"\n",
    "You are an assistant designed to analyze raw CV text in either English or French.\n",
    "\n",
    "Your task is to extract the **start and end character offsets** (positions) of key entities in the original text. Do **not** return any values — only offsets. The output must be a single valid JSON object in the following structure:\n",
    "\n",
    "- `name`, `profile`, `phone`, `email`, `address`: each a dict with `start` and `end`\n",
    "- `experience`: list of blocks, each with `company`, `title`, `start_date`, `end_date`, `description` (offsets)\n",
    "- `education`: list of blocks, each with `establishment`, `degree`, `graduation_date`, `description` (offsets)\n",
    "- `certifications`: list of blocks, each with `title`, `organization`, `date`, `description` (offsets)\n",
    "- `skills`: list of dicts with `start` and `end` positions for each detected skill from skills section if exist, (max 30)\n",
    "\n",
    "⚠️ Do not return any field values or extra text — only a **single valid JSON object with offsets**.\n",
    "\n",
    "Analyze the full CV text below and return only the JSON:\n",
    "\n",
    "CV:\n",
    "\\\"\\\"\\\"{cv_text}\\\"\\\"\\\"\n",
    "END_OF_TEXT\n",
    "\"\"\"\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "33458c90-bbf2-4726-a430-4a62048d95ac",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-18T23:55:17.079762Z",
     "iopub.status.busy": "2025-07-18T23:55:17.079424Z",
     "iopub.status.idle": "2025-07-18T23:58:55.055531Z",
     "shell.execute_reply": "2025-07-18T23:58:55.054972Z",
     "shell.execute_reply.started": "2025-07-18T23:55:17.079745Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following generation flags are not valid and may be ignored: ['temperature']. Set `TRANSFORMERS_VERBOSITY=info` for more details.\n",
      "Setting `pad_token_id` to `eos_token_id`:2 for open-end generation.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "---\n",
      "\n",
      "```json\n",
      "{\n",
      "  \"name\": {\n",
      "    \"start\": 11,\n",
      "    \"end\": 20\n",
      "  },\n",
      "  \"profile\": {\n",
      "    \"start\": 22,\n",
      "    \"end\": 1255\n",
      "  },\n",
      "  \"phone\": {\n",
      "    \"start\": 1256,\n",
      "    \"end\": 1267\n",
      "  },\n",
      "  \"email\": {\n",
      "    \"start\": 1268,\n",
      "    \"end\": 1284\n",
      "  },\n",
      "  \"address\": {\n",
      "    \"start\": 1285,\n",
      "    \"end\": 1302\n",
      "  },\n",
      "  \"experience\": [\n",
      "    {\n",
      "      \"company\": {\n",
      "        \"start\": 1311,\n",
      "        \"end\": 1321\n",
      "      },\n",
      "      \"title\": {\n",
      "        \"start\": 1322,\n",
      "        \"end\": 1332\n",
      "      },\n",
      "      \"start_date\": {\n",
      "        \"start\": 1333,\n",
      "        \"end\": 1336\n",
      "      },\n",
      "      \"end_date\": {\n",
      "        \"start\": 1337,\n",
      "        \"end\": 1340\n",
      "      },\n",
      "      \"description\": {\n",
      "        \"start\": 1341,\n",
      "        \"end\": 1465\n",
      "      }\n",
      "    },\n",
      "    {\n",
      "      \"company\": {\n",
      "        \"start\": 1466,\n",
      "        \"end\": 1476\n",
      "      },\n",
      "      \"title\": {\n",
      "        \"start\": 1477,\n",
      "        \"end\": 1487\n",
      "      },\n",
      "      \"start_date\": {\n",
      "        \"start\": 1488,\n",
      "        \"end\": 1491\n",
      "      },\n",
      "      \"end_date\": {\n",
      "        \"start\": 1492,\n",
      "        \"end\": 1495\n",
      "      },\n",
      "      \"description\": {\n",
      "        \"start\": 1496,\n",
      "        \"end\": 1619\n",
      "      }\n",
      "    },\n",
      "    {\n",
      "      \"company\": {\n",
      "        \"start\": 1620,\n",
      "        \"end\": 1630\n",
      "      },\n",
      "      \"title\": {\n",
      "        \"start\": 1631,\n",
      "        \"end\": 1641\n",
      "      },\n",
      "      \"start_date\": {\n",
      "        \"start\": 1642,\n",
      "        \"end\": 1645\n",
      "      },\n",
      "      \"end_date\": {\n",
      "        \"start\": 1646,\n",
      "        \"end\": 1649\n",
      "      },\n",
      "      \"description\": {\n",
      "        \"start\": 1650,\n",
      "        \"end\": 1773\n",
      "      }\n",
      "    },\n",
      "    {\n",
      "      \"company\": {\n",
      "        \"start\": 1774,\n",
      "        \"end\": 1784\n",
      "      },\n",
      "      \"title\": {\n",
      "        \"start\": 1785,\n",
      "        \"end\": 1795\n",
      "      },\n",
      "      \"start_date\": {\n",
      "        \"start\": 1796,\n",
      "        \"end\": 1799\n",
      "      },\n",
      "      \"end_date\": {\n",
      "        \"start\": 1800,\n",
      "        \"end\": 1803\n",
      "      },\n",
      "      \"description\": {\n",
      "        \"start\": 1804,\n",
      "        \"end\": 1927\n",
      "      }\n",
      "    },\n",
      "    {\n",
      "      \"company\": {\n",
      "        \"start\": 1928,\n",
      "        \"end\": 1938\n",
      "      },\n",
      "      \"title\": {\n",
      "        \"start\": 1939,\n",
      "        \"end\": 1949\n",
      "      },\n",
      "      \"start_date\": {\n",
      "        \"start\": 1950,\n",
      "        \"end\": 1953\n",
      "      },\n",
      "      \"end_date\": {\n",
      "        \"start\": 1954,\n",
      "        \"end\": 1957\n",
      "      },\n",
      "      \"description\": {\n",
      "        \"start\": 1958,\n",
      "        \"end\": 2081\n",
      "      }\n",
      "    }\n",
      "  ],\n",
      "  \"education\": [\n",
      "    {\n",
      "      \"establishment\": {\n",
      "        \"start\": 2088,\n",
      "        \"end\": 2101\n",
      "      },\n",
      "      \"degree\": {\n",
      "        \"start\": 2102,\n",
      "        \"end\": 2112\n",
      "      },\n",
      "      \"graduation_date\": {\n",
      "        \"start\": 2113,\n",
      "        \"end\": 2116\n",
      "      },\n",
      "      \"description\": {\n",
      "        \"start\": 2117,\n",
      "        \"end\": 2139\n",
      "      }\n",
      "    },\n",
      "    {\n",
      "      \"establishment\": {\n",
      "        \"start\": 2140,\n",
      "        \"end\": 2153\n",
      "      },\n",
      "      \"degree\": {\n",
      "        \"start\": 2154,\n",
      "        \"end\": 2164\n",
      "      },\n",
      "      \"graduation_date\": {\n",
      "        \"start\": 2165,\n",
      "        \"end\": 2168\n",
      "      },\n",
      "      \"description\": {\n",
      "        \"start\": 2169,\n",
      "        \"end\": 2191\n",
      "      }\n",
      "    }\n",
      "  ],\n",
      "  \"certifications\": [\n",
      "    {\n",
      "      \"title\": {\n",
      "        \"start\": 2198,\n",
      "        \"end\": 2214\n",
      "      },\n",
      "      \"organization\": {\n",
      "        \"start\": 2215,\n",
      "        \"end\": 2225\n",
      "      },\n",
      "      \"date\": {\n",
      "        \"start\": 2226,\n",
      "        \"end\": 2229\n",
      "      },\n",
      "      \"description\": {\n",
      "        \"start\": 2230,\n",
      "        \"end\": 2252\n",
      "      }\n",
      "    },\n",
      "    {\n",
      "      \"title\": {\n",
      "        \"start\": 2253,\n",
      "        \"end\": 2269\n",
      "      },\n",
      "      \"organization\": {\n",
      "        \"start\": 2270,\n",
      "        \"end\": 2280\n",
      "      },\n",
      "      \"date\": {\n",
      "        \"start\": 2281,\n",
      "        \"end\": 2284\n",
      "      },\n",
      "      \"description\": {\n",
      "        \"start\": 2285,\n",
      "        \"end\": 2307\n",
      "      }\n",
      "    }\n",
      "  ],\n",
      "  \"skills\": [\n",
      "    {\n",
      "      \"start\": 2314,\n",
      "      \"end\": 2324\n",
      "    },\n",
      "    {\n",
      "      \"start\": 2325,\n",
      "      \"end\": 2335\n",
      "    },\n",
      "    {\n",
      "      \"start\": 2336,\n",
      "      \"end\": 2346\n",
      "    },\n",
      "    {\n",
      "      \"start\": 2347,\n",
      "      \"end\": 2357\n",
      "    },\n",
      "    {\n",
      "      \"start\": 2358,\n",
      "      \"end\": 2368\n",
      "    },\n",
      "    {\n",
      "      \"start\": 2369,\n",
      "      \"end\": 2379\n",
      "    },\n",
      "    {\n",
      "      \"start\": 2380,\n",
      "      \"end\": 2390\n",
      "    },\n",
      "    {\n",
      "      \"start\": 2391,\n",
      "      \"end\": 2401\n",
      "    },\n",
      "    {\n",
      "      \"start\": 2402,\n",
      "      \"end\": 2412\n",
      "    },\n",
      "    {\n",
      "      \"start\": 2413,\n",
      "      \"end\": 2423\n",
      "    },\n",
      "    {\n",
      "      \"start\": 2424,\n",
      "      \"end\": 2434\n",
      "    },\n",
      "    {\n",
      "      \"start\": 2435,\n",
      "      \"end\": 2445\n",
      "    },\n",
      "    {\n",
      "      \"start\": 2446,\n",
      "      \"end\": 2456\n",
      "    },\n",
      "    {\n",
      "      \"start\": 2457,\n",
      "      \"end\": 2467\n",
      "    },\n",
      "    {\n",
      "      \"start\": 2468,\n",
      "      \"end\": 2478\n",
      "    },\n",
      "    {\n",
      "      \"start\": 2479,\n",
      "      \"end\": 2489\n",
      "    },\n",
      "    {\n",
      "      \"start\": 2490,\n",
      "      \"end\": 2500\n",
      "    },\n",
      "    {\n",
      "      \"start\": 2501,\n",
      "      \"end\": 2511\n",
      "    },\n",
      "    {\n",
      "      \"start\": 2512,\n",
      "      \"end\": 2522\n",
      "    },\n",
      "    {\n",
      "      \"start\": 2523,\n",
      "      \"end\": 2533\n",
      "    },\n",
      "    {\n",
      "      \"start\": 2534,\n",
      "      \"end\": 2544\n",
      "    }\n",
      "  ]\n",
      "}\n",
      "```\n"
     ]
    }
   ],
   "source": [
    "\n",
    "pdf_path1 = \"CV_Achraf_HT_Directeur et Chef de projet IT_2025.pdf\"\n",
    "\n",
    "\n",
    "cv_text1 = extract_text_from_pdf(pdf_path1)\n",
    "prompt = build_prompt_position1(cv_text1)\n",
    "\n",
    "output1 = pipe(prompt)[0][\"generated_text\"]\n",
    "print(output1)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "a92de19b-1e8f-4767-9dbd-9429d8ed833c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-19T00:12:49.545608Z",
     "iopub.status.busy": "2025-07-19T00:12:49.545104Z",
     "iopub.status.idle": "2025-07-19T00:12:49.549840Z",
     "shell.execute_reply": "2025-07-19T00:12:49.549409Z",
     "shell.execute_reply.started": "2025-07-19T00:12:49.545591Z"
    }
   },
   "outputs": [],
   "source": [
    "import json\n",
    "\n",
    "def extract_entities_from_offsets(text: str, offsets_json: dict) -> dict:\n",
    "    def extract_span(span):\n",
    "        if isinstance(span, dict):\n",
    "            return text[span[\"start\"]:span[\"end\"]].strip()\n",
    "        return None\n",
    "\n",
    "    def extract_block_list(blocks, fields):\n",
    "        extracted = []\n",
    "        for block in blocks:\n",
    "            entry = {}\n",
    "            for field in fields:\n",
    "                entry[field] = extract_span(block.get(field))\n",
    "            extracted.append(entry)\n",
    "        return extracted\n",
    "\n",
    "    result = {}\n",
    "\n",
    "    # Flat fields\n",
    "    for field in [\"name\", \"profile\", \"phone\", \"email\", \"address\"]:\n",
    "        result[field] = extract_span(offsets_json.get(field))\n",
    "\n",
    "    # Structured sections\n",
    "    result[\"experience\"] = extract_block_list(\n",
    "        offsets_json.get(\"experience\", []),\n",
    "        [\"company\", \"title\", \"start_date\", \"end_date\", \"description\"]\n",
    "    )\n",
    "\n",
    "    result[\"education\"] = extract_block_list(\n",
    "        offsets_json.get(\"education\", []),\n",
    "        [\"establishment\", \"degree\", \"graduation_date\", \"description\"]\n",
    "    )\n",
    "\n",
    "    result[\"certifications\"] = extract_block_list(\n",
    "        offsets_json.get(\"certifications\", []),\n",
    "        [\"title\", \"organization\", \"date\", \"description\"]\n",
    "    )\n",
    "\n",
    "    # Skills\n",
    "    result[\"skills\"] = [\n",
    "        text[skill[\"start\"]:skill[\"end\"]].strip()\n",
    "        for skill in offsets_json.get(\"skills\", [])\n",
    "    ]\n",
    "\n",
    "    return result\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "54ae2a59-9840-4425-858d-90510281c6cc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-19T00:16:31.111940Z",
     "iopub.status.busy": "2025-07-19T00:16:31.111530Z",
     "iopub.status.idle": "2025-07-19T00:16:31.115042Z",
     "shell.execute_reply": "2025-07-19T00:16:31.114594Z",
     "shell.execute_reply.started": "2025-07-19T00:16:31.111923Z"
    }
   },
   "outputs": [],
   "source": [
    "import re\n",
    "import json\n",
    "\n",
    "def extract_json_from_output(output: str) -> dict:\n",
    "    # Extract first {...} JSON block using regex\n",
    "    match = re.search(r\"\\{[\\s\\S]+\\}\", output)\n",
    "    if not match:\n",
    "        raise ValueError(\"❌ No JSON block found in the output.\")\n",
    "    \n",
    "    json_str = match.group()\n",
    "    \n",
    "    try:\n",
    "        return json.loads(json_str)\n",
    "    except json.JSONDecodeError as e:\n",
    "        print(\"❌ JSON parse error:\", e)\n",
    "        print(\"🔎 Raw JSON:\", json_str[:500])\n",
    "        raise\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "6431ec57-decd-45c2-b008-fb32a7664a29",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-19T00:18:19.888184Z",
     "iopub.status.busy": "2025-07-19T00:18:19.887682Z",
     "iopub.status.idle": "2025-07-19T00:18:19.892731Z",
     "shell.execute_reply": "2025-07-19T00:18:19.892290Z",
     "shell.execute_reply.started": "2025-07-19T00:18:19.888168Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'name': {'start': 11, 'end': 20}, 'profile': {'start': 22, 'end': 1255}, 'phone': {'start': 1256, 'end': 1267}, 'email': {'start': 1268, 'end': 1284}, 'address': {'start': 1285, 'end': 1302}, 'experience': [{'company': {'start': 1311, 'end': 1321}, 'title': {'start': 1322, 'end': 1332}, 'start_date': {'start': 1333, 'end': 1336}, 'end_date': {'start': 1337, 'end': 1340}, 'description': {'start': 1341, 'end': 1465}}, {'company': {'start': 1466, 'end': 1476}, 'title': {'start': 1477, 'end': 1487}, 'start_date': {'start': 1488, 'end': 1491}, 'end_date': {'start': 1492, 'end': 1495}, 'description': {'start': 1496, 'end': 1619}}, {'company': {'start': 1620, 'end': 1630}, 'title': {'start': 1631, 'end': 1641}, 'start_date': {'start': 1642, 'end': 1645}, 'end_date': {'start': 1646, 'end': 1649}, 'description': {'start': 1650, 'end': 1773}}, {'company': {'start': 1774, 'end': 1784}, 'title': {'start': 1785, 'end': 1795}, 'start_date': {'start': 1796, 'end': 1799}, 'end_date': {'start': 1800, 'end': 1803}, 'description': {'start': 1804, 'end': 1927}}, {'company': {'start': 1928, 'end': 1938}, 'title': {'start': 1939, 'end': 1949}, 'start_date': {'start': 1950, 'end': 1953}, 'end_date': {'start': 1954, 'end': 1957}, 'description': {'start': 1958, 'end': 2081}}], 'education': [{'establishment': {'start': 2088, 'end': 2101}, 'degree': {'start': 2102, 'end': 2112}, 'graduation_date': {'start': 2113, 'end': 2116}, 'description': {'start': 2117, 'end': 2139}}, {'establishment': {'start': 2140, 'end': 2153}, 'degree': {'start': 2154, 'end': 2164}, 'graduation_date': {'start': 2165, 'end': 2168}, 'description': {'start': 2169, 'end': 2191}}], 'certifications': [{'title': {'start': 2198, 'end': 2214}, 'organization': {'start': 2215, 'end': 2225}, 'date': {'start': 2226, 'end': 2229}, 'description': {'start': 2230, 'end': 2252}}, {'title': {'start': 2253, 'end': 2269}, 'organization': {'start': 2270, 'end': 2280}, 'date': {'start': 2281, 'end': 2284}, 'description': {'start': 2285, 'end': 2307}}], 'skills': [{'start': 2314, 'end': 2324}, {'start': 2325, 'end': 2335}, {'start': 2336, 'end': 2346}, {'start': 2347, 'end': 2357}, {'start': 2358, 'end': 2368}, {'start': 2369, 'end': 2379}, {'start': 2380, 'end': 2390}, {'start': 2391, 'end': 2401}, {'start': 2402, 'end': 2412}, {'start': 2413, 'end': 2423}, {'start': 2424, 'end': 2434}, {'start': 2435, 'end': 2445}, {'start': 2446, 'end': 2456}, {'start': 2457, 'end': 2467}, {'start': 2468, 'end': 2478}, {'start': 2479, 'end': 2489}, {'start': 2490, 'end': 2500}, {'start': 2501, 'end': 2511}, {'start': 2512, 'end': 2522}, {'start': 2523, 'end': 2533}, {'start': 2534, 'end': 2544}]}\n",
      "{'address': 'ources, gestion d',\n",
      " 'certifications': [{'date': 'hod',\n",
      "                     'description': 'logie \\n§ \\nMéthodes Agi',\n",
      "                     'organization': 'res. \\n \\nMé',\n",
      "                     'title': 'on d’infrastruct'},\n",
      "                    {'date': 'k',\n",
      "                     'description': 'afe (PI planning, team',\n",
      "                     'organization': 'n) Framewo',\n",
      "                     'title': 'e (Scrum et kanb'}],\n",
      " 'education': [{'degree': 'tisation d',\n",
      "                'description': 'sts, monitoring. \\n§ \\nF',\n",
      "                'establishment': 'design, autom',\n",
      "                'graduation_date': 's t'},\n",
      "               {'degree': 'les envir',\n",
      "                'description': 'ents Mainframe \\net la',\n",
      "                'establishment': 'miliarité ave',\n",
      "                'graduation_date': 'nne'}],\n",
      " 'email': 'location des res',\n",
      " 'experience': [{'company': 's). \\n§ \\nPi',\n",
      "                 'description': 'techniques, de la \\n'\n",
      "                                'conception à la mise en œuvre. \\n'\n",
      "                                ' \\n'\n",
      "                                'Fonctionnelles \\n'\n",
      "                                '§ \\n'\n",
      "                                'Expertise dans les infrastructures mutualisées \\n'\n",
      "                                '(arc',\n",
      "                 'end_date': 'ers',\n",
      "                 'start_date': 'ant',\n",
      "                 'title': 'otage de c'},\n",
      "                {'company': 'itecture,',\n",
      "                 'description': 's partagés). \\n'\n",
      "                                '§ \\n'\n",
      "                                'Expérience dans la définition et la validation des \\n'\n",
      "                                'architectures techniques (microservices, API). \\n'\n",
      "                                '§ \\n'\n",
      "                                'Col',\n",
      "                 'end_date': 'vic',\n",
      "                 'start_date': 'se',\n",
      "                 'title': 'ébergement'},\n",
      "                {'company': 'aboration',\n",
      "                 'description': 'nantes variées \\n'\n",
      "                                '(techniques, métiers, clients). \\n'\n",
      "                                '§ \\n'\n",
      "                                'Gestion des phases de tests et de recette (plan \\n'\n",
      "                                'de test, rapport de te',\n",
      "                 'end_date': 'pr',\n",
      "                 'start_date': 'tie',\n",
      "                 'title': 'vec des pa'},\n",
      "                {'company': 'ts, recett',\n",
      "                 'description': 'echniques \\n'\n",
      "                                '§ \\n'\n",
      "                                'Connaissance éprouvée des écosystèmes \\n'\n",
      "                                'techniques, y compris le cloud (AWS) et les \\n'\n",
      "                                'architectures microservic',\n",
      "                 'end_date': '',\n",
      "                 'start_date': 'r).',\n",
      "                 'title': 'utilisate'},\n",
      "                {'company': 's. \\n§ \\nMaî',\n",
      "                 'description': 'laboratifs (JIRA, \\n'\n",
      "                                'Confluence) et des pratiques DevOps (CI/CD, \\n'\n",
      "                                'TDD, BDD). \\n'\n",
      "                                '§ \\n'\n",
      "                                'Mise en œuvre de pratiques avancées : sécuri',\n",
      "                 'end_date': 'co',\n",
      "                 'start_date': 'til',\n",
      "                 'title': 'rise des o'}],\n",
      " 'name': 'n \\n \\nDire',\n",
      " 'phone': 'ication, \\na',\n",
      " 'profile': 'eur IT et Chef de projet expérimenté, certifié Agile Scrum PSPO I, avec plus de 16 ans d’expérience dans '\n",
      "            'la \\n'\n",
      "            'gestion de projets stratégiques et la conduite de transformations digitales. Reconnu pour ma rigueur, ma '\n",
      "            'capacité à \\n'\n",
      "            'piloter des équipes pluridisciplinaires et multiculturelles, j’interviens avec efficacité sur des '\n",
      "            'environnements \\n'\n",
      "            'complexes, en garantissant un haut niveau de qualité, de performance et de conformité. \\n'\n",
      "            ' \\n'\n",
      "            'Information \\n'\n",
      "            'Localisation : Paris - Impact Carbonne : 9.78 g CO₂e \\n'\n",
      "            ' \\n'\n",
      "            'TJM : 700€ \\n'\n",
      "            'Disponibilité : Immédiate \\n'\n",
      "            'Compétences clés \\n'\n",
      "            'Managériales \\n'\n",
      "            '§ \\n'\n",
      "            'Leadership avéré dans la direction de projets \\n'\n",
      "            'complexes (jusqu’à 40 pays impactés). \\n'\n",
      "            '§ \\n'\n",
      "            'Gestion de programmes stratégiques et \\n'\n",
      "            \"coordination d'équipes pluridisciplinaires. \\n\"\n",
      "            '§ \\n'\n",
      "            'Organisation et animation de comités de \\n'\n",
      "            'gouvernance (architecture, stratégie IT). \\n'\n",
      "            '§ \\n'\n",
      "            'Capacité à définir et piloter des stratégies de \\n'\n",
      "            'transformation (digitalisation, migration, \\n'\n",
      "            'innovation). \\n'\n",
      "            '§ \\n'\n",
      "            ' \\n'\n",
      "            'Chefferie/Directions de projet \\n'\n",
      "            '§ \\n'\n",
      "            'Conduite de projets techniques complexes liés à \\n'\n",
      "            'des environnements critiques (Mainframe, \\n'\n",
      "            'migration cloud). \\n'\n",
      "            '§ \\n'\n",
      "            'Élaboration de livrables clés : cadrage, synthèse, \\n'\n",
      "            'plan d’action, échéanciers, cartographie. \\n'\n",
      "            '§ \\n'\n",
      "            'Suivi opérationnel et budgétaire (plani',\n",
      " 'skills': ['ut ..) \\n§',\n",
      "            'Cycle en V',\n",
      "            '§ \\nNPM -',\n",
      "            'ew Product',\n",
      "            'Introducti',\n",
      "            'n \\n§ \\nLean',\n",
      "            'management',\n",
      "            '§ \\nConcep',\n",
      "            'ion, modél',\n",
      "            'sation et',\n",
      "            'artographi',\n",
      "            'des \\nproc',\n",
      "            'ssus \\nSect',\n",
      "            'ur métier',\n",
      "            '§ \\nBanqu',\n",
      "            '& Assuran',\n",
      "            'e \\n§ \\nE-co',\n",
      "            'merce et m',\n",
      "            'rketing di',\n",
      "            'itale \\n§',\n",
      "            'essources']}\n"
     ]
    }
   ],
   "source": [
    "# Clean JSON\n",
    "offsets_data = extract_json_from_output(output1)\n",
    "print(offsets_data)\n",
    "# Extract entities\n",
    "parsed_cv = extract_entities_from_offsets(cv_text1, offsets_data)\n",
    "\n",
    "# Display results\n",
    "import pprint\n",
    "pprint.pprint(parsed_cv, width=120)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "193928be-3c7b-46e8-822b-25e360a5bb37",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-19T00:23:53.614688Z",
     "iopub.status.busy": "2025-07-19T00:23:53.614134Z",
     "iopub.status.idle": "2025-07-19T00:23:53.617614Z",
     "shell.execute_reply": "2025-07-19T00:23:53.617070Z",
     "shell.execute_reply.started": "2025-07-19T00:23:53.614668Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Length of final CV text: 20338\n"
     ]
    }
   ],
   "source": [
    "print(\"Length of final CV text:\", len(cv_text1))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b13ffc49-0ab7-44b1-9249-8be791db5f90",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
